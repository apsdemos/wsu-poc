{"version":3,"file":"modal.js","sources":["../../src/blocks/modal/modal.js"],"sourcesContent":["import { loadFragment } from '../fragment/fragment.js';\nimport {\n  buildBlock, decorateBlock, loadBlock, loadCSS,\n} from '../../scripts/aem.js';\n\n/*\n  This is not a traditional block, so there is no decorate function.\n  Instead, links to a /modals/ path are automatically transformed into a modal.\n  Other blocks can also use the createModal() and openModal() functions.\n*/\n\nexport async function createModal(contentNodes) {\n  await loadCSS(`${window.hlx.codeBasePath}/blocks/modal/modal.css`);\n  const dialog = document.createElement('dialog');\n  const dialogContent = document.createElement('div');\n  dialogContent.classList.add('modal-content');\n  dialogContent.append(...contentNodes);\n  dialog.append(dialogContent);\n\n  const closeButton = document.createElement('button');\n  closeButton.classList.add('close-button');\n  closeButton.setAttribute('aria-label', 'Close');\n  closeButton.type = 'button';\n  closeButton.innerHTML = '<span class=\"icon icon-close\"></span>';\n  closeButton.addEventListener('click', () => dialog.close());\n  dialog.prepend(closeButton);\n\n  const block = buildBlock('modal', '');\n  document.querySelector('main').append(block);\n  decorateBlock(block);\n  await loadBlock(block);\n\n  // close on click outside the dialog\n  dialog.addEventListener('click', (e) => {\n    const {\n      left, right, top, bottom,\n    } = dialog.getBoundingClientRect();\n    const { clientX, clientY } = e;\n    if (clientX < left || clientX > right || clientY < top || clientY > bottom) {\n      dialog.close();\n    }\n  });\n\n  dialog.addEventListener('close', () => {\n    document.body.classList.remove('modal-open');\n    block.remove();\n  });\n\n  block.innerHTML = '';\n  block.append(dialog);\n\n  return {\n    block,\n    showModal: () => {\n      dialog.showModal();\n      // reset scroll position\n      setTimeout(() => { dialogContent.scrollTop = 0; }, 0);\n      document.body.classList.add('modal-open');\n    },\n  };\n}\n\nexport async function openModal(fragmentUrl) {\n  const path = fragmentUrl.startsWith('http')\n    ? new URL(fragmentUrl, window.location).pathname\n    : fragmentUrl;\n\n  const fragment = await loadFragment(path);\n  const { showModal } = await createModal(fragment.childNodes);\n  showModal();\n}\n"],"names":["createModal","contentNodes","loadCSS","dialog","dialogContent","closeButton","block","buildBlock","decorateBlock","loadBlock","e","left","right","top","bottom","clientX","clientY","openModal","fragmentUrl","path","fragment","loadFragment","showModal"],"mappings":"2JAWO,eAAeA,EAAYC,EAAc,CAC9C,MAAMC,EAAQ,GAAG,OAAO,IAAI,YAAY,yBAAyB,EACjE,MAAMC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAgB,SAAS,cAAc,KAAK,EAClDA,EAAc,UAAU,IAAI,eAAe,EAC3CA,EAAc,OAAO,GAAGH,CAAY,EACpCE,EAAO,OAAOC,CAAa,EAE3B,MAAMC,EAAc,SAAS,cAAc,QAAQ,EACnDA,EAAY,UAAU,IAAI,cAAc,EACxCA,EAAY,aAAa,aAAc,OAAO,EAC9CA,EAAY,KAAO,SACnBA,EAAY,UAAY,wCACxBA,EAAY,iBAAiB,QAAS,IAAMF,EAAO,MAAK,CAAE,EAC1DA,EAAO,QAAQE,CAAW,EAE1B,MAAMC,EAAQC,EAAW,QAAS,EAAE,EACpC,gBAAS,cAAc,MAAM,EAAE,OAAOD,CAAK,EAC3CE,EAAcF,CAAK,EACnB,MAAMG,EAAUH,CAAK,EAGrBH,EAAO,iBAAiB,QAAUO,GAAM,CACtC,KAAM,CACJ,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,OAAAC,CACxB,EAAQX,EAAO,sBAAuB,EAC5B,CAAE,QAAAY,EAAS,QAAAC,CAAO,EAAKN,GACzBK,EAAUJ,GAAQI,EAAUH,GAASI,EAAUH,GAAOG,EAAUF,IAClEX,EAAO,MAAO,CAEpB,CAAG,EAEDA,EAAO,iBAAiB,QAAS,IAAM,CACrC,SAAS,KAAK,UAAU,OAAO,YAAY,EAC3CG,EAAM,OAAQ,CAClB,CAAG,EAEDA,EAAM,UAAY,GAClBA,EAAM,OAAOH,CAAM,EAEZ,CACL,MAAAG,EACA,UAAW,IAAM,CACfH,EAAO,UAAW,EAElB,WAAW,IAAM,CAAEC,EAAc,UAAY,CAAI,EAAE,CAAC,EACpD,SAAS,KAAK,UAAU,IAAI,YAAY,CACzC,CACF,CACH,CAEO,eAAea,EAAUC,EAAa,CAC3C,MAAMC,EAAOD,EAAY,WAAW,MAAM,EACtC,IAAI,IAAIA,EAAa,OAAO,QAAQ,EAAE,SACtCA,EAEEE,EAAW,MAAMC,EAAaF,CAAI,EAClC,CAAE,UAAAG,CAAW,EAAG,MAAMtB,EAAYoB,EAAS,UAAU,EAC3DE,EAAW,CACb"}