{"version":3,"mappings":"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","names":["buildHeroBlock","main","h1","picture","section","buildBlock","loadFonts","loadCSS","autolinkModals","doc","e","origin","openModal","__vitePreload","buildAutoBlocks","error","decorateSections","wrappers","defaultContent","wrapper","sectionMeta","meta","readBlockConfig","key","style","toClassName","toCamelCase","decorateMain","decorateButtons","decorateIcons","decorateBlocks","loadEager","decorateTemplateAndTheme","getMetadata","loadSection","waitForFirstImage","sampleRUM","loadLazy","loadSections","hash","element","loadHeader","loadFooter","loadDelayed","delayed","loadSidekick","loadPage","ue","searchParams","branch","NX_ORIGIN","daPreview"],"ignoreList":[],"sources":["../../src/scripts/scripts.js"],"sourcesContent":["import {\n  buildBlock,\n  loadHeader,\n  loadFooter,\n  decorateButtons,\n  decorateIcons,\n  decorateBlocks,\n  decorateTemplateAndTheme,\n  getMetadata,\n  waitForFirstImage,\n  loadSection,\n  loadSections,\n  loadCSS,\n  sampleRUM,\n  readBlockConfig,\n  toClassName,\n  toCamelCase,\n} from './aem.js';\n\n/**\n * Builds hero block and prepends to main in a new section.\n * @param {Element} main The container element\n */\nfunction buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}\n\n/**\n * load fonts.css and set a session storage flag\n */\nasync function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/src/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}\n\nfunction autolinkModals(doc) {\n  doc.addEventListener('click', async (e) => {\n    const origin = e.target.closest('a');\n    if (origin && origin.href && origin.href.includes('/modals/')) {\n      e.preventDefault();\n      const { openModal } = await import(`${window.hlx.codeBasePath}/blocks/modal/modal.js`);\n      openModal(origin.href);\n    }\n  });\n}\n\n/**\n * Builds all synthetic blocks in a container element.\n * @param {Element} main The container element\n */\nfunction buildAutoBlocks(main) {\n  try {\n    if (!main.querySelector('.hero')) buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}\n\n/**\n * Decorates all sections in a container element.\n * @param {Element} main The container element\n */\nfunction decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.classList.contains('richtext')) {\n        e.removeAttribute('class');\n        if (!defaultContent) {\n          const wrapper = document.createElement('div');\n          wrapper.classList.add('default-content-wrapper');\n          wrappers.push(wrapper);\n          defaultContent = true;\n        }\n      } else if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n\n    // Add wrapped content back\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    // Process section metadata\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style\n            .split(',')\n            .filter((style) => style)\n            .map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}\n\n/**\n * Decorates the main element.\n * @param {Element} main The main element\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}\n\n/**\n * Loads everything needed to get to LCP.\n * @param {Element} doc The container element\n */\nasync function loadEager(doc) {\n  doc.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  if (getMetadata('breadcrumbs').toLowerCase() === 'true') {\n    doc.body.dataset.breadcrumbs = true;\n  }\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    doc.body.classList.add('appear');\n    await loadSection(main.querySelector('.section'), waitForFirstImage);\n  }\n\n  sampleRUM.enhance();\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Loads everything that doesn't need to be delayed.\n * @param {Element} doc The container element\n */\nasync function loadLazy(doc) {\n  autolinkModals(doc);\n\n  const main = doc.querySelector('main');\n  await loadSections(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/src/styles/lazy-styles.css`);\n  loadFonts();\n}\n\n/**\n * Loads everything that happens a lot later,\n * without impacting the user experience.\n */\nfunction loadDelayed() {\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}\n\nasync function loadSidekick() {\n  if (document.querySelector('aem-sidekick')) {\n    import('./sidekick.js');\n    return;\n  }\n\n  document.addEventListener('sidekick-ready', () => {\n    import('./sidekick.js');\n  });\n}\n\nasync function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n  loadSidekick();\n}\n\n// UE Editor support before page load\nif (window.location.hostname.includes('ue.da.live')) {\n  // eslint-disable-next-line import/no-unresolved\n  await import(`${window.hlx.codeBasePath}/ue/scripts/ue.js`).then(({ default: ue }) => ue());\n}\n\nloadPage();\n\nconst { searchParams, origin } = new URL(window.location.href);\nconst branch = searchParams.get('nx') || 'main';\n\nexport const NX_ORIGIN = branch === 'local' || origin.includes('localhost') ? 'http://localhost:6456/nx' : 'https://da.live/nx';\n\n(async function loadDa() {\n  /* eslint-disable import/no-unresolved */\n  if (searchParams.get('dapreview')) {\n    import('https://da.live/scripts/dapreview.js')\n      .then(({ default: daPreview }) => daPreview(loadPage));\n  }\n  if (searchParams.get('daexperiment')) {\n    import(`${NX_ORIGIN}/public/plugins/exp/exp.js`);\n  }\n}());\n"],"file":"chunks/delayed-UHKhK80N.js"}